[
  {
    "objectID": "overview.html",
    "href": "overview.html",
    "title": "",
    "section": "",
    "text": "This Quarto documentation describes the analytical workflow used to generate results for:\n\nAstle, W., & Haus, S. (2025)., Driving with Influence: Exploring Crash Factors of Automated Systems In Different Roadway Contexts\n\nThe analysis is managed using the targetspackage, which handles dependency tracking and reproducible builds.\n\n\nDiagrammatically, the workflow can be visualized as follows:\n\n\n\n\n\nflowchart TD\n\n    %% Define the look for subgraphs\n    classDef blackText fill:none,color:black,font-weight:bold;\n\n    %% Initial load (Blue)\n    subgraph Initial_Datasets[\"Initial Datasets\"]\n        A[ADAS load]\n        B[ADS load]\n    end\n    class Initial_Datasets blackText\n    style A fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style B fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n\n    A --&gt; C[Clean]\n    B --&gt; C\n    style C fill:#2ca02c,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Make rules nodes (Bright Gold)\n    C --&gt; D[Make rules]\n    style D fill:#ffcc00,stroke:#000,stroke-width:2px,color:#000\n\n    %% Global Rules (Orange)\n    subgraph Global_Rules[\"Global Rules\"]\n        E[ADAS rules]\n        F[ADS rules]\n    end\n    class Global_Rules blackText\n    style E fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style F fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n\n    G[Calculate influence]\n    style G fill:#9467bd,stroke:#000,stroke-width:2px,color:#fff\n\n    D --&gt; E --&gt; G\n    D --&gt; F --&gt; G\n\n    G --&gt; H[ADAS Global scores]\n    G --&gt; I[ADS Global scores]\n    style H fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style I fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Initial Influence Scores\n    subgraph Global_Influence_Scores[\"Global Influence Scores\"]\n        H\n        I\n    end\n    class Global_Influence_Scores blackText\n\n    %% Join / Plot nodes (Cyan / Gray)\n    H --&gt; J[Join Global scores]\n    I --&gt; J\n    style J fill:#17becf,stroke:#000,stroke-width:2px,color:#000\n\n    J --&gt; K[Plot Global scores]\n\n    style K fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\n    %% Split step (Green)\n    C --&gt; N[Split]\n    style N fill:#2ca02c,stroke:#000,stroke-width:2px,color:#fff\n\n    subgraph Roadway_Datasets[\"Roadway Datasets\"]\n        O[ADAS Highway]\n        P[ADAS Intersection]\n        Q[ADS Highway]\n        R[ADS Intersection]\n    end\n    class Roadway_Datasets blackText\n    style O fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style P fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style Q fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style R fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Make rules nodes (Bright Gold)\n    N --&gt; O --&gt; S[Make rules]\n    N --&gt; P --&gt; S\n    N --&gt; Q --&gt; S\n    N --&gt; R --&gt; S\n    style S fill:#ffcc00,stroke:#000,stroke-width:2px,color:#000\n\n    %% Roadway Rules (Orange)\n    S --&gt; T[ADAS Highway Rules]\n    S --&gt; U[ADAS Intersection Rules]\n    S --&gt; V[ADS Highway Rules]\n    S --&gt; W[ADS Intersection Rules]\n    style T fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style U fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style V fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style W fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n\n    subgraph Roadway_Rules[\"Roadway Rules\"]\n    T\n    U\n    V\n    W\n    end\n    class Roadway_Rules blackText\n\n    %% Roadway Rules Influence (Purple)\n    T --&gt; X[Calculate influence]\n    U --&gt; X\n    V --&gt; X\n    W --&gt; X\n    style X fill:#9467bd,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Scores (Red)\n    X --&gt; Y[ADAS Highway scores]\n    X --&gt; Z[ADAS Intersection scores]\n    X --&gt; AA[ADS Highway scores]\n    X --&gt; AB[ADS Intersection scores]\n    style Y fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style Z fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style AA fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style AB fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n\n    subgraph Roadway_Influence_Scores[\"Roadway Influence Scores\"]\n    Y\n    Z\n    AA\n    AB\n    end\n    class Roadway_Influence_Scores blackText\n    \n    %% Join / Plot nodes (Cyan / Gray)\nZ --&gt; AC[Join Intersection scores] --&gt; AD[Plot Int scores]\nstyle AC fill:#17becf,stroke:#000,stroke-width:2px,color:#000\nstyle AD fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\nY --&gt; AE[Join Highway scores] --&gt; AF[Plot Hwy scores]\nstyle AE fill:#17becf,stroke:#000,stroke-width:2px,color:#000\nstyle AF fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\nAA --&gt; AE\nAB --&gt;AC\n\n\n\n\n\n\n\n\n\n\nThe analysis is managed by the {targets} pipeline defined in _targets.R. This file outlines each step—data import, cleaning, analysis, and visualization—and their dependencies.\nCustom functions live in the R/ folder and are automatically sourced by {targets}. Input data (public or simulated) are stored in data/, while processed outputs are created during the pipeline run.\nRun the entire workflow with:\n\ntargets::tar_make()\n\nYou can then load the various outputs from the pipeline using:\n\ntargets::tar_load(target_name)\n\n\n\n\nAs an example, to view the cleaned data generated by the {targets} pipeline, I can:\n1 - View the relevant part of the _targets.R file for reference.\nIn this instance, it would look like:\n\ntar_target(\n    cleaned_data, # this is the label of the target we would like to access\n    clean_data(data),\n    pattern = map(data),\n    iteration = \"list\" # to access the two individual datasets, we have the output as a list\n  )\n\n2 - Run tar_make() to run the pipeline\n\ntargets::tar_make()\n\n3 - Load the cleaned datasets using tar_load()\nNotice that the same name from the tar_target portion of the code is used with tar_load.\n\ntargets::tar_load(cleaned_data)\n\n4 - Access the dataset from the cleaned_data list\nSince we had iteration = \"list\" in the _targets.R code, we can access each dataset separately from a list.\n\ndataset_1 &lt;- cleaned_data[[1]]\ndataset_2 &lt;- cleaned_data[[2]]\n\n\n\n\nFor further reference in regards to targets, please see the following documentation: The {targets} R package user manual"
  },
  {
    "objectID": "overview.html#pipeline-overview",
    "href": "overview.html#pipeline-overview",
    "title": "",
    "section": "",
    "text": "This Quarto documentation describes the analytical workflow used to generate results for:\n\nAstle, W., & Haus, S. (2025)., Driving with Influence: Exploring Crash Factors of Automated Systems In Different Roadway Contexts\n\nThe analysis is managed using the targetspackage, which handles dependency tracking and reproducible builds.\n\n\nDiagrammatically, the workflow can be visualized as follows:\n\n\n\n\n\nflowchart TD\n\n    %% Define the look for subgraphs\n    classDef blackText fill:none,color:black,font-weight:bold;\n\n    %% Initial load (Blue)\n    subgraph Initial_Datasets[\"Initial Datasets\"]\n        A[ADAS load]\n        B[ADS load]\n    end\n    class Initial_Datasets blackText\n    style A fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style B fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n\n    A --&gt; C[Clean]\n    B --&gt; C\n    style C fill:#2ca02c,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Make rules nodes (Bright Gold)\n    C --&gt; D[Make rules]\n    style D fill:#ffcc00,stroke:#000,stroke-width:2px,color:#000\n\n    %% Global Rules (Orange)\n    subgraph Global_Rules[\"Global Rules\"]\n        E[ADAS rules]\n        F[ADS rules]\n    end\n    class Global_Rules blackText\n    style E fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style F fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n\n    G[Calculate influence]\n    style G fill:#9467bd,stroke:#000,stroke-width:2px,color:#fff\n\n    D --&gt; E --&gt; G\n    D --&gt; F --&gt; G\n\n    G --&gt; H[ADAS Global scores]\n    G --&gt; I[ADS Global scores]\n    style H fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style I fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Initial Influence Scores\n    subgraph Global_Influence_Scores[\"Global Influence Scores\"]\n        H\n        I\n    end\n    class Global_Influence_Scores blackText\n\n    %% Join / Plot nodes (Cyan / Gray)\n    H --&gt; J[Join Global scores]\n    I --&gt; J\n    style J fill:#17becf,stroke:#000,stroke-width:2px,color:#000\n\n    J --&gt; K[Plot Global scores]\n\n    style K fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\n    %% Split step (Green)\n    C --&gt; N[Split]\n    style N fill:#2ca02c,stroke:#000,stroke-width:2px,color:#fff\n\n    subgraph Roadway_Datasets[\"Roadway Datasets\"]\n        O[ADAS Highway]\n        P[ADAS Intersection]\n        Q[ADS Highway]\n        R[ADS Intersection]\n    end\n    class Roadway_Datasets blackText\n    style O fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style P fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style Q fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n    style R fill:#1f77b4,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Make rules nodes (Bright Gold)\n    N --&gt; O --&gt; S[Make rules]\n    N --&gt; P --&gt; S\n    N --&gt; Q --&gt; S\n    N --&gt; R --&gt; S\n    style S fill:#ffcc00,stroke:#000,stroke-width:2px,color:#000\n\n    %% Roadway Rules (Orange)\n    S --&gt; T[ADAS Highway Rules]\n    S --&gt; U[ADAS Intersection Rules]\n    S --&gt; V[ADS Highway Rules]\n    S --&gt; W[ADS Intersection Rules]\n    style T fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style U fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style V fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n    style W fill:#ff7f0e,stroke:#000,stroke-width:2px,color:#000\n\n    subgraph Roadway_Rules[\"Roadway Rules\"]\n    T\n    U\n    V\n    W\n    end\n    class Roadway_Rules blackText\n\n    %% Roadway Rules Influence (Purple)\n    T --&gt; X[Calculate influence]\n    U --&gt; X\n    V --&gt; X\n    W --&gt; X\n    style X fill:#9467bd,stroke:#000,stroke-width:2px,color:#fff\n\n    %% Scores (Red)\n    X --&gt; Y[ADAS Highway scores]\n    X --&gt; Z[ADAS Intersection scores]\n    X --&gt; AA[ADS Highway scores]\n    X --&gt; AB[ADS Intersection scores]\n    style Y fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style Z fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style AA fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n    style AB fill:#d62728,stroke:#000,stroke-width:2px,color:#fff\n\n    subgraph Roadway_Influence_Scores[\"Roadway Influence Scores\"]\n    Y\n    Z\n    AA\n    AB\n    end\n    class Roadway_Influence_Scores blackText\n    \n    %% Join / Plot nodes (Cyan / Gray)\nZ --&gt; AC[Join Intersection scores] --&gt; AD[Plot Int scores]\nstyle AC fill:#17becf,stroke:#000,stroke-width:2px,color:#000\nstyle AD fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\nY --&gt; AE[Join Highway scores] --&gt; AF[Plot Hwy scores]\nstyle AE fill:#17becf,stroke:#000,stroke-width:2px,color:#000\nstyle AF fill:#00bfae,stroke:#000,stroke-width:2px,color:#000\n\nAA --&gt; AE\nAB --&gt;AC\n\n\n\n\n\n\n\n\n\n\nThe analysis is managed by the {targets} pipeline defined in _targets.R. This file outlines each step—data import, cleaning, analysis, and visualization—and their dependencies.\nCustom functions live in the R/ folder and are automatically sourced by {targets}. Input data (public or simulated) are stored in data/, while processed outputs are created during the pipeline run.\nRun the entire workflow with:\n\ntargets::tar_make()\n\nYou can then load the various outputs from the pipeline using:\n\ntargets::tar_load(target_name)\n\n\n\n\nAs an example, to view the cleaned data generated by the {targets} pipeline, I can:\n1 - View the relevant part of the _targets.R file for reference.\nIn this instance, it would look like:\n\ntar_target(\n    cleaned_data, # this is the label of the target we would like to access\n    clean_data(data),\n    pattern = map(data),\n    iteration = \"list\" # to access the two individual datasets, we have the output as a list\n  )\n\n2 - Run tar_make() to run the pipeline\n\ntargets::tar_make()\n\n3 - Load the cleaned datasets using tar_load()\nNotice that the same name from the tar_target portion of the code is used with tar_load.\n\ntargets::tar_load(cleaned_data)\n\n4 - Access the dataset from the cleaned_data list\nSince we had iteration = \"list\" in the _targets.R code, we can access each dataset separately from a list.\n\ndataset_1 &lt;- cleaned_data[[1]]\ndataset_2 &lt;- cleaned_data[[2]]\n\n\n\n\nFor further reference in regards to targets, please see the following documentation: The {targets} R package user manual"
  }
]